<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tabPage2.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button17.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxMAAAsTAQCanBgAAANuSURBVDhPZdJbTJt1GMfxH2vX
        w9sD5aXv+9LSA5Se6AHa0q610LeltHQUKqgE65aS0DmFTLBGOSyyDRiyjenI4oU4o0vm3BLdZtiFOmPm
        JDpdFqM3Oi90CXGyDAPohQcM8reJMTF6+Vx8njzJ88V2qhSVjiQqTX7UJQpwNQ/C3fo0NPYWKDkrygwB
        qCo9ztrE8EElaxGoNA6otC4oGDP+h53RfjibB6ScpZFTsjXGhuw8E8ydOZmauLNpadxTUKpNYC1RCETU
        P7gV2ioP3NG9Gm/HxJ4du1876+9986NA3+WboYGr1/jRW+v8+DKJjX39E2eJt9EGH4Ri+d9YY4mgxtvJ
        hx9950bz+NpmcPgu2TGyRoIH/iC+kRVSX/iWeAq3ivMqCQ5+8l2lpyu0TShCcQMFU6gv3jT45Y+evZ+v
        6xNzC7qWE8d1zbNTWn5q1p5773bD6BIJHlwmkaO/kJ3zW8TWPvkKAAmkpRW6+odOfWjgJ09TrMcvoW0U
        691XoguPoaw6KXXlL92Mn/iVNB26ve7KnflA1/T4M7Q5FtomEAkhlnN6zp5Jl5nawDkyoE08DOEhMOY4
        WE8u6Nh9etH24MmXOW9PkvPtKlNonCi3xlDExbMlpcVX+MHWxFDfOQ0r3w93ZqJEqtKpRUqtVqK2Gpi6
        HtCWFugDj4A1+1Fe1VDE2wERVQ69pxucmYcjNcbYWwqZxoFL59ydk68KJDS0vm44Og+gwpmA0d8FzhpS
        VdijjUKRTA6xjJVWB3tjlujQWLj/8vX22bs/P/DiKgn1nTpSmx6BPT0KT3YaGmeCsifz/P1TF9/1dQ0f
        LykRiCFTGRxN+64td8xtkbZjqyT9/Arpmvv+z9jgW28H+l4aqs8efSLy1Nmp9pkLC08urvzW/cKVj3Xu
        VJVQpABktElR9/DrM/HJla3k9B3SOrNEMvMbpOc8IbsubpD8+5tkYPF3Uvjs3kbHcxcWKhwpk1hhgpx1
        A5TKALoqKjanDr/BH14jkel75L79XyxFnl38Knns+jc7Z67caNl/7rwrU8gZ/T3FpHlQtA1yxgmIKTUE
        AgoyjZdxPXb10/ChH4hSH0ir7Sk760y7lZpavTmap6pDWVii+WLXsX9hGQORlIFCFwJTl40YE+PzQikt
        oIvxq20xyNVG2JL9MEd6/4Od+AuqKgZUu9NK4AAAAABJRU5ErkJggg==
</value>
  </data>
</root>